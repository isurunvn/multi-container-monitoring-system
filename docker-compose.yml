# Multi-Container Monitoring System
# Consolidated Docker Compose with enhanced logging and monitoring

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:
  web1:
    image: nginx:alpine
    container_name: web1
    logging: *default-logging
    volumes:
      - web1-content:/usr/share/nginx/html
    ports:
      - "8081:80"
    environment:
      - CONTAINER_ID=web1
      - TZ=${TZ}

  web2:
    image: nginx:alpine
    container_name: web2
    logging: *default-logging
    volumes:
      - web2-content:/usr/share/nginx/html
    ports:
      - "8082:80"
    environment:
      - CONTAINER_ID=web2
      - TZ=${TZ}

  db:
    image: postgres:16-alpine
    container_name: db
    logging: *default-logging
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: ${TZ}
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  watchdog:
    build: ./watchdog
    container_name: watchdog
    logging: *default-logging
    environment:
      - TARGET_TIMEZONE=${TARGET_TIMEZONE}
      - TZ=${TZ}
      - WEB_TARGETS=${WEB_TARGETS}
      - EXPECT_TEXT=${EXPECT_TEXT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - CHECK_INTERVAL_SEC=${CHECK_INTERVAL_SEC}
      - MAX_ALLOWED_DRIFT_SEC=${MAX_ALLOWED_DRIFT_SEC}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_FROM=${SMTP_FROM}
      - SMTP_TO=${SMTP_TO}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - web1-content:/sites/web1
      - web2-content:/sites/web2
      - monitoring-logs:/var/log/monitoring
    depends_on:
      - db
      - web1
      - web2

  log-viewer:
    build: ./logging
    container_name: log-viewer
    logging: *default-logging
    volumes:
      - monitoring-logs:/var/log/monitoring
    ports:
      - "8090:80"
    depends_on:
      - db
      - watchdog
    environment:
      - TZ=${TZ}

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    logging: *default-logging
    ports:
      - "1025:1025"
      - "8025:8025"
    environment:
      - TZ=${TZ}

volumes:
  db-data:
  web1-content:
  web2-content:
  monitoring-logs:
